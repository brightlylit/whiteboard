[{"/Users/mattsteele/redacto/public/html/whiteboard/src/index.js":"1","/Users/mattsteele/redacto/public/html/whiteboard/src/App.js":"2","/Users/mattsteele/redacto/public/html/whiteboard/src/serviceWorker.js":"3","/Users/mattsteele/redacto/public/html/whiteboard/src/components/Chat.js":"4","/Users/mattsteele/redacto/public/html/whiteboard/src/components/JoinRoom.js":"5","/Users/mattsteele/redacto/public/html/whiteboard/src/components/CreateRoom.js":"6","/Users/mattsteele/redacto/public/html/whiteboard/src/components/ExampleStyledComponent.js":"7","/Users/mattsteele/redacto/public/html/whiteboard/src/components/DisplayImage.js":"8","/Users/mattsteele/redacto/public/html/whiteboard/src/components/Canvas.js":"9"},{"size":596,"mtime":1610617546000,"results":"10","hashOfConfig":"11"},{"size":5818,"mtime":1610619068000,"results":"12","hashOfConfig":"11"},{"size":5086,"mtime":1592214031000,"results":"13","hashOfConfig":"11"},{"size":884,"mtime":1607507464000,"results":"14","hashOfConfig":"11"},{"size":741,"mtime":1607507036000,"results":"15","hashOfConfig":"11"},{"size":852,"mtime":1607507034000,"results":"16","hashOfConfig":"11"},{"size":902,"mtime":1608547461000,"results":"17","hashOfConfig":"11"},{"size":609,"mtime":1608113850000,"results":"18","hashOfConfig":"11"},{"size":1393,"mtime":1608066389000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"ani4pn",{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/mattsteele/redacto/public/html/whiteboard/src/index.js",["46"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst app = (\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>\n);\n\nReactDOM.render(\n  app, document.getElementById('root')\n);\n//registerServiceWorker();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n",["47","48"],"/Users/mattsteele/redacto/public/html/whiteboard/src/App.js",["49","50","51","52","53","54"],"import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Chat from './components/Chat';\nimport Canvas from './components/Canvas';\nimport JoinRoom from './components/JoinRoom'\nimport CreateRoom from './components/CreateRoom';\nimport DisplayImage from './components/DisplayImage'\nimport Raphael from \"raphael\";\nimport './App.css';\nimport {Grid, Row, Col, NewCol} from './components/ExampleStyledComponent'\nimport { createBrowserHistory } from 'history';\nimport { Route } from 'react-router-dom';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.ENDPOINT = \"http://localhost:3001\";\n    this.socket = socketIOClient(this.ENDPOINT);\n    this.onClickHandler = this.onClickHandler.bind(this)\n    this.onChangeHandler = this.onChangeHandler.bind(this)\n    this.resp = []\n    this.img = {}\n  }\n  state = {\n    image: {},\n    roomName:\"\",\n    chatData:\"\",\n    canvasData:\"\",\n    inData:[],\n    youSaidIsChecked: true,\n    pClassName: undefined,\n    imageHeight:\"\"\n  }\n  componentDidMount= () => {\n    this.paper = new Raphael(\"mycontainer\", 500, 500);\n    this.socket.on(\"FromAPI\", data => {\n      console.log(\"[componentdidmount]: \",data)\n    });\n    this.socket.on(\"response\", inData => {\n      this.resp.push(inData)\n      this.setState({inData:this.resp})\n      console.log(\"inData: \", inData)\n    })\n    this.socket.on(\"created_message\", data => {\n      this.setState({roomName:data},console.log(\"you created: \"+data))\n    })\n    this.socket.on(\"joined_message\", data => {\n      this.setState({roomName:data},console.log(\"you joined: \"+data))\n    })\n    this.socket.on(\"mouse_position_update\", data => {\n      let p = document.getElementById('containerHolder');\n      let mousex = data.mx - p.offsetLeft\n      let mousey = data.my - p.offsetTop - 20\n      switch(data.canvasData){\n        case \"stress marker\": let cir = this.paper.circle(mousex - 30, mousey, 5).attr({fill:\"red\"});\n        break;\n        case \"syllable marker\": let cir2 = this.paper.circle(mousex - 10, mousey, 5).attr({fill:\"black\"});\n        break;\n        default: let text1 = this.paper.text(mousex - 10, mousey, data.canvasData).attr({\"font-size\":\"24px\"});\n        break;\n      }\n\n    })\n    this.socket.on(\"receiveImage\", function(data) {\n      let DOM_img = document.createElement(\"img\");\n      DOM_img.src = data.buffer;\n      DOM_img.style.height = \"100px\";\n      let holder = document.getElementById(\"imgHolder\")\n      holder.insertBefore(DOM_img, holder.firstChild)\n    });\n    \n  }\n  \n  onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      this.img = event.target.files[0];\n      console.log(\"event.target.files[0].size: \",event.target.files[0].size)\n      if(event.target.files[0].size > 1000000){\n        alert(\"Too big. Choose an image less than 1MB in size.\")\n      }else{\n        this.setState({\n          image: URL.createObjectURL(this.img),\n          imageHeight:\"100px\"\n        });\n        let dataURI = URL.createObjectURL(this.img)\n        this.socket.emit(\"sendImage\", dataURI, this.state.roomName) \n      }\n      \n    }\n  };\n  onChangeHandler = (event) =>{\n    this.setState({chatData:event.target.value}) \n  }\n  onCanvasInputChange = (event) =>{\n    this.setState({canvasData:event.target.value})    \n   \n  }\n \n  canvasOnClick = (e) => {\n    console.log(\"canvasOnClick this.state.canvasData: \",this.state.canvasData)\n    \n    this.socket.emit('mouse_position', {mx : e.pageX, my : e.pageY, canvasData:this.state.canvasData, roomName:this.state.roomName})\n    \n  }\n  onClickHandler = () => {\n    let payload = {room:this.state.roomName, chatData:this.state.chatData} \n    this.socket.emit(\"message\", payload) \n    console.log(\"onclickhandler\") \n  }\n  createTheRoom = (room) =>{\n    this.socket.emit(\"createRoom\", room)\n    alert(\"room is: \"+room)\n  }\n  joinTheRoom = (room) => {\n    this.socket.emit(\"joinTheRoom\", room)\n  }\n \n  render(){\n    return (\n      <Grid>\n        <Row>\n          <div className=\"header\">\n              \n              <CreateRoom\n                createTheRoom={this.createTheRoom}\n              />\n              <JoinRoom\n                joinTheRoom={this.joinTheRoom}\n              />    \n          </div>\n        </Row>\n        <Row>\n          <NewCol>\n            <div className=\"column left\" id=\"imgHolder\">\n              {/*<MaterialsChooser/>*/}\n              <DisplayImage\n                imgSrc={this.state.image}\n                changeImage={this.onImageChange}\n                myHeight={this.state.imageHeight}\n              />\n              <span>æ</span><span>ɒ</span><span>b</span><span>ð</span>eəfɡıkŋprsʤ\n            </div>\n          </NewCol>\n          <NewCol>\n            <div className=\"column center\">\n              <Chat\n                pClassName={ this.state.pClassName }\n                spanVal={ this.state.inData } \n                onChange={ this.onChangeHandler }\n                onClick={ this.onClickHandler }\n                idCorrect={\"Correct\"}\n                idInCorrect={\"Incorrect\"}\n              /> \n            </div>\n          </NewCol>\n          <NewCol>\n            <div id=\"containerHolder\" className=\"hiddenOverflowColumn\">\n              <Canvas\n                onClick={this.canvasOnClick}\n                id={\"mycontainer\"}\n                canvasInputChangeData={this.onCanvasInputChange}\n              />\n            </div>\n          \n          </NewCol>\n        </Row>\n       \n        \n\n      </Grid>\n        \n         \n          \n         \n          \n      \n    )\n  } \n}\n\n\nexport default App;\n//export const history = createBrowserHistory({\n//  basename: process.env.PUBLIC_URL\n//});\n/*<p>\n      <span>{response}</span><br/>\n      <input value={} type=\"text\"/>\n      <button onClick={onClickHandler} name=\"submit\">submit</button>\n    </p>*/","/Users/mattsteele/redacto/public/html/whiteboard/src/serviceWorker.js",[],"/Users/mattsteele/redacto/public/html/whiteboard/src/components/Chat.js",["55"],"import React, { Component } from 'react'\nconst cssRef = React.forwardRef((props, ref)=>{\n    \n})\nclass Chat extends Component {\n    \n    render(){\n        \n        return (\n            \n            <div>\n                {this.props.spanVal.map((el, i)=> {\n                    return (                     \n                        <p \n                        className={ this.props.pClassName } \n                        key={ i }>\n                            { el }\n                        </p>                                       \n                    )    \n                })}\n                <input type=\"text\"\n                    onChange = {this.props.onChange} \n                />\n                <button type=\"submit\"\n                    onClick = {this.props.onClick}\n                >submit\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Chat;","/Users/mattsteele/redacto/public/html/whiteboard/src/components/JoinRoom.js",["56"],"import React, {Component} from 'react';\n\nclass JoinRoom extends Component{\n    constructor(props){\n        super(props)\n    }\n    state = {roomName:\"\"}\n    onClick = () => {\n        this.props.joinTheRoom(this.state.roomName)\n    }\n    onChangeHandler = (event) => {\n        this.setState({roomName:event.target.value})\n    }\n    render(){\n        return(\n            <React.Fragment>\n                <input \n                    type=\"text\" \n                    onChange={this.onChangeHandler}\n                />\n                <button \n                    type=\"submit\"\n                    onClick = {this.onClick}\n                >Join Room\n                </button>\n            </React.Fragment>\n        )\n    }\n}\nexport default JoinRoom","/Users/mattsteele/redacto/public/html/whiteboard/src/components/CreateRoom.js",["57"],"import React, { Component } from 'react';\n\nclass CreateRoom extends Component {\n    constructor(props){\n        super(props)\n\n    }\n    state = { roomName: \"\"}\n    \n    onClick = () => {\n       // this.socket.emit(\"createRoom\", this.state.roomName) \n        this.props.createTheRoom(this.state.roomName)       \n    }\n    onChangeHandler = (event) => {\n        this.setState({roomName:event.target.value})\n    }\n   \n    \n    render(){\n        return(\n            <React.Fragment>  \n                <input \n                    type=\"text\" \n                    onChange={this.onChangeHandler}\n                />\n                <button \n                    type=\"submit\"\n                    onClick = {this.onClick}\n                >Create Room\n                </button>\n            </React.Fragment>\n\n        )\n       \n\n    }\n}\nexport default CreateRoom\n",["58","59"],"/Users/mattsteele/redacto/public/html/whiteboard/src/components/ExampleStyledComponent.js",[],"/Users/mattsteele/redacto/public/html/whiteboard/src/components/DisplayImage.js",["60"],"import React, { Component } from \"react\";\n\nclass DisplayImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null\n    };\n  }\n\n  \n\n  render() {\n    return (\n      <React.Fragment>\n       \n            <img \n                src={this.props.imgSrc}\n                height={this.props.myHeight} \n            />\n            <h1>Select Image</h1>\n            <input \n                type=\"file\" \n                name=\"myImage\" \n                onChange={this.props.changeImage} \n            />\n          \n      </React.Fragment>\n    );\n  }\n}\nexport default DisplayImage;","/Users/mattsteele/redacto/public/html/whiteboard/src/components/Canvas.js",[],{"ruleId":"61","severity":1,"message":"62","line":5,"column":13,"nodeType":"63","messageId":"64","endLine":5,"endColumn":26},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"61","severity":1,"message":"69","line":10,"column":20,"nodeType":"63","messageId":"64","endLine":10,"endColumn":23},{"ruleId":"61","severity":1,"message":"70","line":11,"column":10,"nodeType":"63","messageId":"64","endLine":11,"endColumn":30},{"ruleId":"61","severity":1,"message":"71","line":12,"column":10,"nodeType":"63","messageId":"64","endLine":12,"endColumn":15},{"ruleId":"61","severity":1,"message":"72","line":56,"column":35,"nodeType":"63","messageId":"64","endLine":56,"endColumn":38},{"ruleId":"61","severity":1,"message":"73","line":58,"column":37,"nodeType":"63","messageId":"64","endLine":58,"endColumn":41},{"ruleId":"61","severity":1,"message":"74","line":60,"column":22,"nodeType":"63","messageId":"64","endLine":60,"endColumn":27},{"ruleId":"61","severity":1,"message":"75","line":2,"column":7,"nodeType":"63","messageId":"64","endLine":2,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":4,"column":5,"nodeType":"78","messageId":"79","endLine":6,"endColumn":6},{"ruleId":"76","severity":1,"message":"77","line":4,"column":5,"nodeType":"78","messageId":"79","endLine":7,"endColumn":6},{"ruleId":"65","replacedBy":"80"},{"ruleId":"67","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":17,"column":13,"nodeType":"84","endLine":20,"endColumn":15},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["85"],"no-negated-in-lhs",["86"],"'Col' is defined but never used.","'createBrowserHistory' is defined but never used.","'Route' is defined but never used.","'cir' is assigned a value but never used.","'cir2' is assigned a value but never used.","'text1' is assigned a value but never used.","'cssRef' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["85"],["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]